// <auto-generated />
using ECCUSBET_Web.Models.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECCUSBET_Web.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210719124642_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECCUSBET_Web.Models.Repository.TbCustoTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CustoTotaldaBet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DimensionbamentoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DimensionbamentoID")
                        .IsUnique();

                    b.ToTable("Tabela de Custo Total");
                });

            modelBuilder.Entity("ECCUSBET_Web.Models.Repository.TbDimensionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Comprimento")
                        .HasColumnType("float");

                    b.Property<int>("CustoTotalID")
                        .HasColumnType("int");

                    b.Property<double>("Largura")
                        .HasColumnType("float");

                    b.Property<double>("Profundidade")
                        .HasColumnType("float");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Tabela de Dimensionamento");
                });

            modelBuilder.Entity("ECCUSBET_Web.Models.Repository.TbOrcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PrecoTotalporItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Servico_Equipamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tabela de Orçamento");
                });

            modelBuilder.Entity("ECCUSBET_Web.Models.Repository.TbCustoTotal", b =>
                {
                    b.HasOne("ECCUSBET_Web.Models.Repository.TbDimensionamento", "TbDimensionamento")
                        .WithOne("TbCustoTotal")
                        .HasForeignKey("ECCUSBET_Web.Models.Repository.TbCustoTotal", "DimensionbamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TbDimensionamento");
                });

            modelBuilder.Entity("ECCUSBET_Web.Models.Repository.TbDimensionamento", b =>
                {
                    b.Navigation("TbCustoTotal");
                });
#pragma warning restore 612, 618
        }
    }
}
